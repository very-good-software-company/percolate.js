function importJS({path:a,success:b,error:c}){requestIdleCallback(()=>{import(a).then(()=>b(a)).catch(()=>c(a))})}let intersectionObserver=new IntersectionObserver((a,b)=>{a.forEach(a=>{if(a.isIntersecting){let c=a.target.nodeName.toLowerCase();importJS({path:`${b.baseImportPath}${c}.js`,success:b.importSuccessCallback,error:b.importErrorCallback}),b.unobserve(a.target)}})});export default function a({baseURL:c="/",tagPartial:d="",successCallback:e=()=>{},errorCallback:f=console.error}){if(!d)return console.error("Percolate Error: Missing tagPartial argument");let g=document.evaluate(`//*[starts-with(name(), "${d}")]`,document.body,null,XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,null);for(let a=0;a<g.snapshotLength;a++){let b=g.snapshotItem(a),h=b.nodeName.toLowerCase(),i=!!b.dataset.loadonview;i?(intersectionObserver.baseImportPath=c,intersectionObserver.importSuccessCallback=e,intersectionObserver.importErrorCallback=f,intersectionObserver.observe(b)):importJS({path:`${c}${h}.js`,success:e,error:f})}}